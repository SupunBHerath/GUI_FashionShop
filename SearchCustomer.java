/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.guicoursework;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author supun
 */
public class SearchCustomer extends javax.swing.JFrame {

    /**
     * Creates new form SearchCustomer
     */
    public SearchCustomer() {
        initComponents();
        Cid.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Cid = new javax.swing.JTextField();
        btnsearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        CustomerTable = new javax.swing.JTable();
        btnBack1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lbtotal = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Search Customer");
        setBackground(new java.awt.Color(204, 204, 204));
        setPreferredSize(new java.awt.Dimension(550, 450));
        addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                formMouseWheelMoved(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Enter Customer Id : ");

        Cid.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Cid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CidKeyPressed(evt);
            }
        });

        btnsearch.setBackground(new java.awt.Color(0, 153, 51));
        btnsearch.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnsearch.setForeground(new java.awt.Color(255, 255, 255));
        btnsearch.setText("Search");
        btnsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchActionPerformed(evt);
            }
        });
        btnsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnsearchKeyPressed(evt);
            }
        });

        CustomerTable.setAutoCreateRowSorter(true);
        CustomerTable.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 255, 255), java.awt.Color.white));
        CustomerTable.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        CustomerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Size", "Qty", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        CustomerTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        CustomerTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        CustomerTable.setEnabled(false);
        CustomerTable.setFocusable(false);
        CustomerTable.setGridColor(new java.awt.Color(255, 255, 255));
        CustomerTable.setName(""); // NOI18N
        CustomerTable.setRowHeight(42);
        CustomerTable.setSelectionBackground(new java.awt.Color(242, 242, 242));
        CustomerTable.setShowGrid(true);
        CustomerTable.setUpdateSelectionOnSort(false);
        CustomerTable.setVerifyInputWhenFocusTarget(false);
        jScrollPane1.setViewportView(CustomerTable);

        btnBack1.setBackground(new java.awt.Color(255, 102, 102));
        btnBack1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnBack1.setForeground(new java.awt.Color(255, 255, 255));
        btnBack1.setText("Back");
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Total : ");

        lbtotal.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lbtotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbtotal.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                lbtotalAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnBack1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Cid, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lbtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnBack1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cid, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel2, lbtotal});

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchActionPerformed
        if (Cid.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Enter the Customer Id.");
            Cid.setText("");
            Cid.requestFocus();
        }else{
        DefaultTableModel dtm = (DefaultTableModel) CustomerTable.getModel();
        ArrayList<Orders> orderList = Home.orderList;
        String PNumber = Cid.getText();
        DefaultTableCellRenderer center = new DefaultTableCellRenderer();
        center.setHorizontalAlignment(JLabel.CENTER);
        JTableHeader tableHeader = CustomerTable.getTableHeader();
        tableHeader.setDefaultRenderer(center);
        for (int columnIndex = 0; columnIndex < 3; columnIndex++) {
            CustomerTable.getColumnModel().getColumn(columnIndex).setCellRenderer(center);
        }
        boolean found = false;
        int j = 0;
        int[] tem = new int[orderList.size()];
        for (int i = 0; i < orderList.size(); i++) {
            Orders tempary = orderList.get(i);
            // thawa kalikawa array ekata save kirima
            if (tempary.getPhoneNumber().equals(PNumber)) {
                j++;
                tem[j - 1] = i;
                found = true;
            }
        }
        if (!found) {
            int isok = JOptionPane.showConfirmDialog(this, "Invalit Input.. Do you want Try", "Error", JOptionPane.OK_OPTION, JOptionPane.YES_NO_OPTION, null);
            L1:
            if (isok == JOptionPane.YES_OPTION) {
                Cid.setText("");
                Cid.requestFocus();
            } else {
                dispose();
            }

        }
        int[] tem2 = new int[j];
        for (int i = 0; i < j; i++) {
            tem2[i] = tem[i];
        }
        String[] temSizeArr = {"XS", "S", "M", "L", "XL", "XXL"};
        int[] qtyTable = Code.qtyTableFore(tem2, orderList);
        double[] amountTable = {qtyTable[0] * 600, qtyTable[1] * 800, qtyTable[2] * 900, qtyTable[3] * 1000, qtyTable[4] * 1100, qtyTable[5] * 1200};

        for (int i = 0; i < qtyTable.length; i++) {
            for (int k = 0; k < qtyTable.length - 1; k++) {
                if (qtyTable[k] < qtyTable[k + 1]) {
                    int temqty = qtyTable[k + 1];
                    qtyTable[k + 1] = qtyTable[k];
                    qtyTable[k] = temqty;

                    double temamount = amountTable[k + 1];
                    amountTable[k + 1] = amountTable[k];
                    amountTable[k] = temamount;

                    String tempSize = temSizeArr[k + 1];
                    temSizeArr[k + 1] = temSizeArr[k];
                    temSizeArr[k] = tempSize;
                }
            }
        }
        dtm.setRowCount(0);
        double total = 0;
        for (int i = 0; i < qtyTable.length; i++) {
            Object[] rowData = {temSizeArr[i], qtyTable[i], String.format("%.2f", amountTable[i])};
            dtm.addRow(rowData);
            total += amountTable[i];
        }
        lbtotal.setText(Double.toString(total) + "0");        // TODO add your handling code here:
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnsearchActionPerformed

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        dispose();

    }//GEN-LAST:event_btnBack1ActionPerformed

    private void formMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_formMouseWheelMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseWheelMoved

    private void CidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CidKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_TAB) {
            btnsearchActionPerformed(null);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_CidKeyPressed

    private void btnsearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnsearchKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_TAB) {

            if (Cid.getText().equals("")) {
                JOptionPane.showConfirmDialog(this, "Enter the Customer Id..");
                dispose();
                new SearchCustomer().setVisible(true);
            }
            DefaultTableModel dtm = (DefaultTableModel) CustomerTable.getModel();
            ArrayList<Orders> orderList = Home.orderList;
            String PNumber = Cid.getText();
            DefaultTableCellRenderer center = new DefaultTableCellRenderer();
            center.setHorizontalAlignment(JLabel.CENTER);
            JTableHeader tableHeader = CustomerTable.getTableHeader();
            tableHeader.setDefaultRenderer(center);
            for (int columnIndex = 1; columnIndex < 3; columnIndex++) {
                CustomerTable.getColumnModel().getColumn(columnIndex).setCellRenderer(center);
            }
            boolean found = false;
            int j = 0;
            int[] tem = new int[orderList.size()];
            for (int i = 0; i < orderList.size(); i++) {
                Orders tempary = orderList.get(i);
                // thawa kalikawa array ekata save kirima
                if (tempary.getPhoneNumber().equals(PNumber)) {
                    j++;
                    tem[j - 1] = i;
                    found = true;
                }
            }
            if (!found) {
                int isok = JOptionPane.showConfirmDialog(this, "Invalit Input.. Do you want Try", "Error", JOptionPane.OK_OPTION, JOptionPane.YES_NO_OPTION, null);
                L1:
                if (isok == JOptionPane.YES_OPTION) {
                    dispose();
                    new SearchCustomer().setVisible(true);
                } else {
                    dispose();
                }

            }
            int[] tem2 = new int[j];
            for (int i = 0; i < j; i++) {
                tem2[i] = tem[i];
            }
            String[] temSizeArr = {"XS", "S", "M", "L", "XL", "XXL"};
            int[] qtyTable = Code.qtyTableFore(tem2, orderList);
            double[] amountTable = {qtyTable[0] * 600, qtyTable[1] * 800, qtyTable[2] * 900, qtyTable[3] * 1000, qtyTable[4] * 1100, qtyTable[5] * 1200};

            for (int i = 0; i < qtyTable.length; i++) {
                for (int k = 0; k < qtyTable.length - 1; k++) {
                    if (qtyTable[k] < qtyTable[k + 1]) {
                        int temqty = qtyTable[k + 1];
                        qtyTable[k + 1] = qtyTable[k];
                        qtyTable[k] = temqty;

                        double temamount = amountTable[k + 1];
                        amountTable[k + 1] = amountTable[k];
                        amountTable[k] = temamount;

                        String tempSize = temSizeArr[k + 1];
                        temSizeArr[k + 1] = temSizeArr[k];
                        temSizeArr[k] = tempSize;
                    }
                }
            }
            dtm.setRowCount(0);
            double total = 0;
            for (int i = 0; i < qtyTable.length; i++) {
                Object[] rowData = {temSizeArr[i], qtyTable[i], String.format("%.2f", amountTable[i])};
                dtm.addRow(rowData);
                total += amountTable[i];
            }
            lbtotal.setText(Double.toString(total));        // TODO add your handling code here:

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnsearchKeyPressed

    private void lbtotalAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_lbtotalAncestorAdded
    }//GEN-LAST:event_lbtotalAncestorAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchCustomer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Cid;
    private javax.swing.JTable CustomerTable;
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnsearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbtotal;
    // End of variables declaration//GEN-END:variables
}
